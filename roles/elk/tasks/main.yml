---
- name: create packages json
  sudo: yes
  template:
    src: "{{ item.value.template }}"
    dest: /etc/marathon/apps/{{ item.value.dest }}
  with_dict: elk_packages
  tags:
    - elk

- name: check if services are registered
  sudo: yes
  run_once: yes
  shell: "consul-cli catalog-service {{ item.key }} | jq '.|length'"
  register: elk_service_count
  changed_when: false
  with_dict: elk_packages
  tags:
    - elk

- name: install elasticsearch
  sudo: yes
  run_once: yes
  command: consul-cli kv-write mantl-install/apps/elasticsearch @/etc/marathon/apps/{{ pkgs.elasticsearch.dest }}
  when: "{{ item.stdout|int == 0 and item.item.key == 'elasticsearch' }}"
  with_items: elk_service_count.results
  tags:
    - elk

- name: install elasticsearch-client
  sudo: yes
  run_once: yes
  command: consul-cli kv-write mantl-install/apps/elasticsearch-client @/etc/marathon/apps/{{ pkgs['elasticsearch-client'].dest }}
  when: "{{ item.stdout|int == 0 and item.item.key == 'elasticsearch-client' }}"
  with_items: elk_service_count.results
  tags:
    - elk

- name: install kibana
  sudo: yes
  run_once: yes
  command: consul-cli kv-write mantl-install/apps/kibana @/etc/marathon/apps/{{ pkgs.kibana.dest }}
  when: "{{ item.stdout|int == 0 and item.item.key == 'kibana' }}"
  with_items: elk_service_count.results
  tags:
    - elk

- name: remove packages json
  sudo: yes
  file:
    dest: /etc/marathon/apps/{{ item.value.dest }}
    state: absent
  with_items: elk_packages
  tags:
    - elk
